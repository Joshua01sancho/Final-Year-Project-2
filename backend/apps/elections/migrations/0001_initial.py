# Generated by Django 4.2.23 on 2025-06-19 23:21

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('party', models.CharField(blank=True, max_length=100)),
                ('position', models.CharField(blank=True, max_length=100)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['election', 'order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Election',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('election_type', models.CharField(choices=[('single', 'Single Choice'), ('multiple', 'Multiple Choice'), ('ranked', 'Ranked Choice')], default='single', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('paused', 'Paused'), ('ended', 'Ended'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('public_key_n', models.BigIntegerField(blank=True, null=True)),
                ('public_key_g', models.BigIntegerField(blank=True, null=True)),
                ('private_key_shares', models.JSONField(blank=True, default=list)),
                ('max_choices', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('allow_abstention', models.BooleanField(default=False)),
                ('require_2fa', models.BooleanField(default=True)),
                ('require_biometric', models.BooleanField(default=True)),
                ('blockchain_contract_address', models.CharField(blank=True, max_length=42, null=True)),
                ('blockchain_deployment_tx', models.CharField(blank=True, max_length=66, null=True)),
                ('is_public', models.BooleanField(default=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ElectionAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(max_length=50)),
                ('event_data', models.JSONField(default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ElectionResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encrypted_total_votes', models.TextField(blank=True)),
                ('encrypted_candidate_votes', models.JSONField(blank=True, default=dict)),
                ('total_votes', models.PositiveIntegerField(default=0)),
                ('candidate_results', models.JSONField(blank=True, default=dict)),
                ('decryption_status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('trustees_participated', models.JSONField(blank=True, default=list)),
                ('decryption_timestamp', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encrypted_vote_data', models.TextField()),
                ('vote_hash', models.CharField(max_length=64, unique=True)),
                ('blockchain_tx_hash', models.CharField(blank=True, max_length=66, null=True)),
                ('blockchain_block_number', models.BigIntegerField(blank=True, null=True)),
                ('is_valid', models.BooleanField(default=True)),
                ('validation_errors', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('face_verified', models.BooleanField(default=False)),
                ('fingerprint_verified', models.BooleanField(default=False)),
                ('two_fa_verified', models.BooleanField(default=False)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('audit_data', models.JSONField(blank=True, default=dict)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='elections.election')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
